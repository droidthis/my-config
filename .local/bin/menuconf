#!/usr/bin/env bash
#
# Script name: dmconf
# Description: Choose from a list of configuration files to edit.
# Dependencies: dmenu, emacsclient
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: Derek Taylor
#               Simon Ingelsson
#               HostGrady
# Usage:
# to use other editor than emacsclient set DMEDITOR accordingly
#   Example: `DMEDITOR="alacritty -e nvim" ./dmconf`

config="$HOME/.config/dmscripts/config"
# No issues should arrise since it won't even be sourced if the file doesn't exist
# shellcheck disable=SC1090
[[ -f "$config" ]] && source "$config"

: "${DMEDITOR:=kitty -e nvim}"

if [[ ! "$(declare -p options 2>/dev/null)" == "declare -A"* ]] ; then 
  declare -A options
  options[kitty]="$HOME/.config/kitty/kitty.conf"
  options[zsh]="$HOME/.zshrc"
  options[i3]="$HOME/.config/i3/config"
  options[neovim]="$HOME/.config/nvim/init.vim"
  options[xsession]="$HOME/.xsession"
  options[alacritty]="$HOME/.config/alacritty/alacritty.yml"
  options[dunst]="$HOME/.config/dunst/dunstrc"
  options[gsimplecal]="$HOME/.config/gsimplecal/config"
  options[picom]="$HOME/.config/picom.conf"
fi

# Clean options array making sure that the files exist
declare -A options_clean
  for i in "${!options[@]}"; do
    [[ -f ${options["${i}"]} ]] && options_clean["${i}"]=${options["${i}"]}
  done

# Piping the above array (cleaned) into dmenu.
# We use "printf '%s\n'" to format the array one item to a line.
choice=$(printf '%s\n' "${!options_clean[@]}" | sort | dmenu -i -l 20 -p 'Edit config:' "$@")

# What to do when/if we choose a file to edit.
if [ "$choice" ]; then
  cfg=$(printf '%s\n' "${options_clean["${choice}"]}")
  $DMEDITOR "$cfg"

# What to do if we just escape without choosing anything.
else
    echo "Program terminated." && exit 0
fi
